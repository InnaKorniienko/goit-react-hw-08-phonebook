{"version":3,"file":"static/js/634.52c09021.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/shared/Components/TextField.module.css?823f","components/shared/Components/TextField.js","components/shared/Hooks/UseForm.js","components/RegisterForm/InitialState.js","components/RegisterForm/Fields.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"TextField_formGroup__r7cSs\",\"field\":\"TextField_field__z1Dqi\"};","import PropTypes from \"prop-types\";\n\nimport css from \"./TextField.module.css\";\n\nconst TextField = ({id, label, value, name, handleChange, type, checked, className, placeholder, required, pattern}) => {\n    const fullClassName = className ? `${css.field} ${className}` : css.field;\n\n    return (\n        <div className={css.formGroup}>\n            {label && <label htmlFor={id}>{label}</label>}\n            <input id={id} value={value} checked={checked} name={name} onChange={handleChange} type={type} className={fullClassName} placeholder={placeholder} required={required} pattern={pattern} />\n        </div>\n    )\n}\n\nexport default TextField;\n\nTextField.defaultProps = {\n    type: \"text\",\n    required: false,\n}\n\nTextField.propTypes = {\n    id: PropTypes.string, \n    label: PropTypes.string, \n    value: PropTypes.string, \n    name: PropTypes.string.isRequired, \n    handleChange: PropTypes.func.isRequired, \n    type: PropTypes.string, \n    className: PropTypes.string, \n    placeholder: PropTypes.string,  \n    required: PropTypes.bool, \n    pattern: PropTypes.string,\n}","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { value, name, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;","const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n}\n\nexport default initialState;","const fields = {\n    name: {\n        label: \"User name\",\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Enter user name\",\n        required: true,\n    },\n    email: {\n        label: \"User email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Enter user email\",\n        required: true,\n    },\n    password: {\n        label: \"User password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter user password (min 6 symbols)\",\n        required: true,\n    }\n}\n\nexport default fields;","import { useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport PropTypes from \"prop-types\";\nimport initialState from \"./InitialState\";\nimport fields from \"./Fields\";\nimport useForm from \"components/shared/Hooks/UseForm\";\nimport TextField from \"../shared/Components/TextField\";\n\n\nconst RegisterForm = ({onSubmit}) => {\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n\n    const nameId = useMemo(()=> nanoid(), []);\n    const emailId = useMemo(()=> nanoid(), []);\n    const passwordId = useMemo(()=> nanoid(), []);\n\n    const {name, email, password} = state;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField id={nameId} value={name} handleChange={handleChange} {...fields.name} />\n            <TextField id={emailId} value={email} handleChange={handleChange} {...fields.email} />\n            <TextField id={passwordId} value={password} handleChange={handleChange} {...fields.password} />\n            <button>Register</button>\n        </form>\n    )\n}\n\nexport default RegisterForm;\n\nRegisterForm.defaultProps = {\n    onSubmit: () => {}\n}\n\nRegisterForm.propTypes = {\n    onSubmit: PropTypes.func,\n}","import { useDispatch } from 'react-redux';\nimport { signup } from 'redux/auth/auth-operations';\n// import { isLogin } from '../redux/auth/auth-selector';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n// import { Navigate } from 'react-router-dom';\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n  // const isUserLogin = useSelector(isLogin);\n\n  const onRegister = (data) => {\n    dispatch(signup(data));\n  }\n\n  // if (isUserLogin) {\n  //   return <Navigate to=\"/my-contacts\" />\n  // }\n\n  return (\n    <div>\n        <h1>Register page</h1>\n        <RegisterForm onSubmit={onRegister}/>\n    </div>\n  )\n}\n"],"names":["TextField","id","label","value","name","handleChange","type","checked","className","placeholder","required","pattern","fullClassName","css","htmlFor","onChange","defaultProps","initialState","onSubmit","useState","state","setState","target","newValue","prevState","handleSubmit","e","preventDefault","email","password","RegisterForm","useForm","nameId","useMemo","nanoid","emailId","passwordId","fields","RegisterPage","dispatch","useDispatch","data","signup"],"sourceRoot":""}