{"version":3,"file":"static/js/562.3e35dac6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/shared/Components/TextField.module.css?823f","components/shared/Components/TextField.js","components/shared/Hooks/UseForm.js","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/PhonebookAdd/InitialState.js","components/Phonebook/PhonebookAdd/Fields.js","components/Phonebook/PhonebookAdd/PhonebookAdd.jsx","redux/filter/filter-selectors.js","redux/contacts/contacts-selectors.js","components/Phonebook/Contactlist.jsx","components/Phonebook/Filter.jsx","components/Phonebook/Phonebook.jsx","pages/MyContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"TextField_formGroup__r7cSs\",\"field\":\"TextField_field__z1Dqi\"};","import PropTypes from \"prop-types\";\n\nimport css from \"./TextField.module.css\";\n\nconst TextField = ({id, label, value, name, handleChange, type, checked, className, placeholder, required, pattern}) => {\n    const fullClassName = className ? `${css.field} ${className}` : css.field;\n\n    return (\n        <div className={css.formGroup}>\n            {label && <label htmlFor={id}>{label}</label>}\n            <input id={id} value={value} checked={checked} name={name} onChange={handleChange} type={type} className={fullClassName} placeholder={placeholder} required={required} pattern={pattern} />\n        </div>\n    )\n}\n\nexport default TextField;\n\nTextField.defaultProps = {\n    type: \"text\",\n    required: false,\n}\n\nTextField.propTypes = {\n    id: PropTypes.string, \n    label: PropTypes.string, \n    value: PropTypes.string, \n    name: PropTypes.string.isRequired, \n    handleChange: PropTypes.func.isRequired, \n    type: PropTypes.string, \n    className: PropTypes.string, \n    placeholder: PropTypes.string,  \n    required: PropTypes.bool, \n    pattern: PropTypes.string,\n}","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { value, name, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Phonebook_container__u4h5I\",\"inputForm\":\"Phonebook_inputForm__hL1x8\",\"label\":\"Phonebook_label__Qzztg\",\"input\":\"Phonebook_input__8yiEQ\",\"inputForm__button\":\"Phonebook_inputForm__button__1llfk\",\"filter\":\"Phonebook_filter__X-pBt\",\"form\":\"Phonebook_form__J23fu\",\"contacts\":\"Phonebook_contacts__FMhKp\",\"contactlist\":\"Phonebook_contactlist__bZYAH\",\"contactlist__button\":\"Phonebook_contactlist__button__EEzOQ\"};","const initialState = {\n    name: '',\n    number: '',\n  };\n  \n  export default initialState;","const fields = {\n    name: {\n      label: 'Name contact',\n      name: 'name',\n      type: 'text',\n      placeholder: 'Name contact',\n      required: true,\n    },\n    number: {\n      label: 'Phone number',\n      name: 'number',\n      type: 'tel',\n      placeholder: 'Phone number',\n      required: true,\n    },\n  };\n  \n  export default fields;","import { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { nanoid } from \"nanoid\";\n\nimport useForm from \"../../shared/Hooks/UseForm\";\n\nimport TextField from \"../../shared/Components/TextField\";\nimport css from \"../Phonebook.module.css\";\n\nimport initialState from \"./InitialState\";\nimport fields from \"./Fields\";\n\nconst PhonebookAdd = ({onSubmit}) => {\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n\n    const nameId = useMemo(()=> nanoid(), []);\n    const phoneId = useMemo(()=> nanoid(), []);\n  \n   \n    const {name, phone} = state;\n\n    return (\n        <form className={css.form} onSubmit={handleSubmit}>\n            <TextField id={nameId}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            onChange={handleChange}\n            {...fields.name} />\n            <TextField id={phoneId}\n            value={phone}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            required\n            onChange={handleChange}\n            {...fields.number} />\n            <button className={css.inputForm__button}>Add contact</button>\n        </form>\n    )\n}\n\nexport default PhonebookAdd;\n\n\nPhonebookAdd.defaultProps = {\n    onSubmit: () => {}\n}\n\nPhonebookAdd.propTypes = {\n    onSubmit: PropTypes.func,\n}\n\n// import { nanoid } from \"nanoid\";\n// import { useState, useEffect } from \"react\";\n// import { useSelector } from \"react-redux\";\n// import { getContacts } from \"redux/contacts/contacts-selectors\";\n// import { useDispatch } from \"react-redux\";\n// import { addContact } from \"../../redux/contacts/contacts-operation\";\n// import { fetchContacts } from \"redux/contacts/contacts-operation\";\n// import Notiflix from \"notiflix\";\n// import css from \"./Phonebook.module.css\";\n\n// const PhonebookAdd = () => {\n//     const [name, setName] = useState(\"\");\n//     const [number, setNumber] = useState(\"\");\n//     const dispatch = useDispatch();\n//     const contacts = useSelector(getContacts);\n\n//     const nameId = nanoid();\n//     const phoneId = nanoid();\n\n//     useEffect(() => {\n//         dispatch(fetchContacts());\n//     }, [dispatch])\n\n//     const onAddContact = contact => {\n//       if (isDublicate(contact)) {\n//         Notiflix.Notify.warning(`${contact.name} or ${contact.phone} is already in contact`);\n//         return;\n//     }\n//     const action = addContact(contact);\n//     dispatch(action);\n//     setName('');\n//     setNumber('');\n//     }\n\n//         const isDublicate = ({ name, phone }) => {\n//         const result = contacts.find(\n//             contact => contact.name.toLowerCase() === name.toLowerCase() || contact.phone.toLowerCase() === phone.toLowerCase()\n//     );\n//         return result;\n//     }\n\n\n   \n//     const handleChange = e => {\n//         switch (e.currentTarget.name) {\n//           case 'name':\n//             setName(e.currentTarget.value);\n//             break;\n    \n//           case 'number':\n//             setNumber(e.currentTarget.value);\n//             break;\n    \n//           default:\n//             return;\n//         }\n//       };\n\n//       const handleSubmit = (e) => {\n//         e.preventDefault();\n//         onAddContact({name, phone: number})\n//       }  \n\n//       return (\n//         <form className={css.form} onSubmit={handleSubmit} >\n//         <div className={css.inputForm}>\n//         <label className={css.label} htmlFor={nameId}> Name </label>\n//         <input className={css.input}\n//             id={nameId}\n//             type=\"text\"\n//             name=\"name\"\n//             value={name}\n//             onChange={handleChange}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             placeholder=\"Please add name\"\n//             required\n//         />\n//         </div>\n//         <div className={css.inputForm}>\n//         <label className={css.label} htmlFor={phoneId}> Number </label>\n//         <input className={css.input}\n//             id={phoneId}\n//             type=\"tel\"\n//             name=\"number\"\n//             value={number}\n//             onChange={handleChange}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             placeholder=\"Please add telnumber\"\n//             required\n//         />\n//         </div>\n//         <button className={css.inputForm__button}> Add contact </button>\n//         </form>\n//     )\n// }\n\n// export default PhonebookAdd;","export const getFilter = store => store.filter;","export const getContacts = ({contacts}) => contacts.items;\nexport const getState = ({contacts}) => ({loading: contacts.loading, error: contacts.error})\n\n","import { getFilter } from \"redux/filter/filter-selectors\";\nimport { getContacts} from \"redux/contacts/contacts-selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeContact } from \"../../redux/contacts/contacts-operation\"\nimport css from \"./Phonebook.module.css\";\n\n\nexport default function Contactlist() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onRemoveContact = id => {\n    const action = removeContact(id);\n    dispatch(action);\n}\n\nconst getFilteredContacts = () => {\n  if(!filter) {\n  return contacts;\n}\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n  const filteredContacts = contacts.filter(({ name }) => {\n  const normalizedName = name.toLocaleLowerCase();\n  const result = normalizedName.includes(normalizedFilter);\n  return result;\n  })\n\n  return filteredContacts;\n}\n\nconst filteredContacts = getFilteredContacts();\nconst elements = filteredContacts?.map(({ name, phone, id }) => {\n    return <li className={css.contactlist} key={id}> {name}: {phone}  \n    <span className={css.contactlist__button} onClick={() => onRemoveContact(id)}>Delete</span></li>\n  })\n  return (\n    <ul className={css.contactItem}>{elements}</ul>\n  )\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport css from \"./Phonebook.module.css\";\nimport { getFilter } from \"redux/filter/filter-selectors\";\nimport { setFilter } from \"redux/filter/filter-slice\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <div className={css.filter}>\n    <label className={css.label} > Find contacts by name </label>\n    <input className={css.input} type=\"text\" name=\"filter\" value={filter} \n    onChange={e => dispatch(setFilter(e.target.value))}/>\n    </div>\n    )\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport PhonebookAdd from './PhonebookAdd/PhonebookAdd';\nimport Contactlist from './Contactlist';\n\nimport {\n  fetchContacts,\n  addContact,\n  removeContact,\n} from '../../redux/contacts/contacts-operation';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport { getState } from \"../../redux/contacts/contacts-selectors\";\n\nimport Filter from './Filter';\nimport css from './Phonebook.module.css';\n\nconst Phonebook = () => {\n  const contacts = useSelector(getFilter);\n  const { loading } = useSelector(getState);\n  const filter = useSelector(store => store.filter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAddContact = data => {\n    const action = addContact(data);\n    dispatch(action);\n  };\n\n  const onRemoveContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  const getFilteredContacts = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div className={css.container}>\n      <div className={css.phonebook}>\n        <h2>Phoneboook</h2>\n        <PhonebookAdd onSubmit={onAddContact} />\n      </div>\n      <div className={css.contacts}>\n        <h2>Contacts</h2>\n        <Filter\n          type=\"text\"\n          value={filter}\n          name=\"filter\"\n          onChange={getFilteredContacts}\n          placeholder=\"filter\"\n        />\n        {!loading && contacts.length > 0 && <Contactlist items={contacts} removeContact={onRemoveContact} />}\n        {loading && <p>...loading</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Phonebook;\n\n// import PhonebookAdd from \"./PhonebookAdd\";\n// import Contactlist from \"./Contactlist\";\n// import Filter from \"./Filter\";\n// import css from \"./Phonebook.module.css\";\n\n// export default function Phonebook() {\n\n// return (\n//     <div className={css.container}>\n//     <div className={css.phonebook}>\n//         <h2>Phoneboook</h2>\n//         <PhonebookAdd/>\n//     </div>\n//     <div className={css.contacts}>\n//         <h2>Contacts</h2>\n//         <Filter/>\n//         <Contactlist/>\n//     </div>\n//     </div>\n//     )\n// }\n","// import { Navigate } from \"react-router-dom\";\nimport Phonebook from \"components/Phonebook/Phonebook\";\n// import useAuth from \"components/shared/Hooks/UseAuth\";\n\nconst MyContactsPage = () => {\n    // const isLogin = useAuth();\n\n    // if (!isLogin) {\n    //     return <Navigate to=\"/login\" />\n    //   }\n\n    return (\n        <div>\n            {/* <h1>My Contacts Page</h1> */}\n            <Phonebook />\n        </div>\n    )\n}\n\nexport default MyContactsPage;"],"names":["TextField","id","label","value","name","handleChange","type","checked","className","placeholder","required","pattern","fullClassName","css","htmlFor","onChange","defaultProps","initialState","onSubmit","useState","state","setState","target","newValue","prevState","handleSubmit","e","preventDefault","number","PhonebookAdd","useForm","nameId","useMemo","nanoid","phoneId","phone","fields","getFilter","store","filter","getContacts","contacts","items","getState","loading","error","Contactlist","useSelector","dispatch","useDispatch","filteredContacts","normalizedFilter","toLocaleLowerCase","includes","getFilteredContacts","elements","map","onClick","action","removeContact","onRemoveContact","Filter","setFilter","useEffect","fetchContacts","data","addContact","length"],"sourceRoot":""}